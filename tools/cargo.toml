# Cargo Tool Configuration for Ahma MCP
name = "cargo"
description = "Rust's build tool and package manager"
command = "cargo"
enabled = true

# JSON Schema for the tool input parameters
[input_schema]
type = "object"
properties = {}

# Common cargo subcommands
[[subcommand]]
name = "build"
description = "Build the project"
[[subcommand.options]]
name = "release"
type = "boolean"
description = "Build with optimizations enabled"
[[subcommand.options]]
name = "features"
type = "string"
description = "Space-separated list of features to enable"
[[subcommand.options]]
name = "workspace"
type = "boolean"
description = "Build all packages in the workspace"

[[subcommand]]
name = "test"
description = "Run tests"
[[subcommand.options]]
name = "release"
type = "boolean" 
description = "Run tests with optimizations"
[[subcommand.options]]
name = "workspace"
type = "boolean"
description = "Run tests for all packages in workspace"

[[subcommand]]
name = "check"
description = "Check code without building"
[[subcommand.options]]
name = "release"
type = "boolean"
description = "Check with release profile"
[[subcommand.options]]
name = "workspace"
type = "boolean"
description = "Check all packages in workspace"

[[subcommand]]
name = "clippy"
description = "Run Clippy linter"
[[subcommand.options]]
name = "fix"
type = "boolean"
description = "Automatically fix warnings"
[[subcommand.options]]
name = "allow-dirty"
type = "boolean"
description = "Allow fixing when working directory is dirty"

[[subcommand]]
name = "fmt" 
description = "Format code using rustfmt"
[[subcommand.options]]
name = "check"
type = "boolean"
description = "Check if files are formatted without changing them"

[[subcommand]]
name = "run"
description = "Run the project"
[[subcommand.options]]
name = "release"
type = "boolean"
description = "Run with optimizations"
[[subcommand.options]]
name = "bin"
type = "string"
description = "Name of the binary to run"

[[subcommand]]
name = "doc"
description = "Generate documentation"
[[subcommand.options]]
name = "no-deps"
type = "boolean"
description = "Don't build documentation for dependencies"
[[subcommand.options]]
name = "open"
type = "boolean"
description = "Open documentation in browser"

# AI guidance hints
[hints]
primary = "Cargo is Rust's build tool and package manager"
usage = "Common commands: build, test, run, check, clippy, fmt"
 
[[subcommand]]
name = "clean"
description = "Remove build artifacts"

[[subcommand]]
name = "add"
description = "Add a dependency to Cargo.toml (requires cargo-edit)"
[[subcommand.options]]
name = "package"
type = "string"
description = "Package name (and optional version) to add, e.g. serde@1.0"

[[subcommand]]
name = "remove"
description = "Remove a dependency from Cargo.toml (requires cargo-edit)"
[[subcommand.options]]
name = "package"
type = "string"
description = "Package name to remove"

[[subcommand]]
name = "update"
description = "Update dependencies in Cargo.lock to latest compatible versions"
[[subcommand.options]]
name = "package"
type = "string"
description = "Optional specific package to update"

[[subcommand]]
name = "fetch"
description = "Download dependencies without building"

[[subcommand]]
name = "install"
description = "Install a Rust binary via cargo"
[[subcommand.options]]
name = "package"
type = "string"
description = "Package/binary to install"

[[subcommand]]
name = "search"
description = "Search for packages on crates.io"
[[subcommand.options]]
name = "query"
type = "string"
description = "Search query"

[[subcommand]]
name = "tree"
description = "Display dependency tree"

[[subcommand]]
name = "version"
description = "Show cargo version information"

[[subcommand]]
name = "rustc"
description = "Compile with custom rustc options"
[[subcommand.options]]
name = "flag"
type = "string"
description = "Pass-through rustc flag"

[[subcommand]]
name = "metadata"
description = "Output package metadata as JSON"

[[subcommand]]
name = "nextest"
description = "Run tests with cargo-nextest (if installed)"
[[subcommand.options]]
name = "workspace"
type = "boolean"
description = "Run tests for all packages in workspace"

[[subcommand]]
name = "audit"
description = "Run security vulnerability scanning (if cargo-audit installed)"

[[subcommand]]
name = "upgrade"
description = "Upgrade dependency versions in Cargo.toml (requires cargo-edit)"
[[subcommand.options]]
name = "yes"
type = "boolean"
description = "Automatically apply upgrades"

[[subcommand]]
name = "bump_version"
description = "Bump package version (requires cargo-edit or custom script)"
[[subcommand.options]]
name = "bump_type"
type = "string"
description = "patch, minor, or major"
[[subcommand.options]]
name = "dry_run"
type = "boolean"
description = "Show changes without modifying files"

[[subcommand]]
name = "bench"
description = "Run benchmarks"
