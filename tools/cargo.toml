# Cargo Tool Configuration for Ahma MCP
name = "cargo"
description = "Rust's build tool and package manager"
command = "cargo"
enabled = true
timeout_seconds = 600

[hints]
default = "While cargo operations run, consider reviewing Cargo.toml dependencies, planning tests, or analyzing code structure for optimization opportunities."
build = "Building in progress - review compilation output for warnings, plan deployment steps, or work on documentation."
test = "Tests running - analyze test patterns, consider additional test cases, or review code coverage strategies."
doc = "Documentation building - consider reviewing doc comments, planning API improvements, or working on examples."
check = "Type checking in progress - plan refactoring opportunities or review code patterns while waiting."

# JSON Schema for the tool input parameters  
[input_schema]
type = "object"
properties = {}

# Build project (async by default)
[[subcommand]]
name = "build"
description = """Compile the current package.

**IMPORTANT:** This tool operates asynchronously.
1. **Immediate Response:** Returns operation_id and status 'started'. NOT success.
2. **Final Result:** Result pushed automatically via MCP notification when complete.

**Your Instructions:**
- **DO NOT** wait for the final result.
- **DO** continue with other tasks that don't depend on this operation.
- You **MUST** process the future result notification to know if operation succeeded."""

[[subcommand.options]]
name = "release"
type = "boolean"
description = "Build with optimizations enabled"
[[subcommand.options]]
name = "features"
type = "string"
description = "Space-separated list of features to enable"
[[subcommand.options]]
name = "workspace"
type = "boolean"
description = "Build all packages in the workspace"

[[subcommand]]
name = "test"
description = """Run the test suite.

**IMPORTANT:** This tool operates asynchronously.
1. **Immediate Response:** Returns operation_id and status 'started'. NOT success.
2. **Final Result:** Result pushed automatically via MCP notification when complete.

**Your Instructions:**
- **DO NOT** wait for the final result.
- **DO** continue with other tasks that don't depend on this operation.
- You **MUST** process the future result notification to know if operation succeeded."""

[[subcommand.options]]
name = "release"
type = "boolean" 
description = "Run tests with optimizations"
[[subcommand.options]]
name = "workspace"
type = "boolean"
description = "Run tests for all packages in workspace"

[[subcommand]]
name = "check"
description = """Check code without building.

**IMPORTANT:** This tool operates asynchronously.
1. **Immediate Response:** Returns operation_id and status 'started'. NOT success.
2. **Final Result:** Result pushed automatically via MCP notification when complete.

**Your Instructions:**
- **DO NOT** wait for the final result.
- **DO** continue with other tasks that don't depend on this operation.
- You **MUST** process the future result notification to know if operation succeeded."""

[[subcommand.options]]
name = "release"
type = "boolean"
description = "Check with release profile"
[[subcommand.options]]
name = "workspace"
type = "boolean"
description = "Check all packages in workspace"

[[subcommand]]
name = "clippy"
description = """Enhanced linting and code quality checks.

**IMPORTANT:** This tool operates asynchronously.
1. **Immediate Response:** Returns operation_id and status 'started'. NOT success.
2. **Final Result:** Result pushed automatically via MCP notification when complete.

**Your Instructions:**
- **DO NOT** wait for the final result.
- **DO** continue with other tasks that don't depend on this operation.
- You **MUST** process the future result notification to know if operation succeeded."""

[[subcommand.options]]
name = "fix"
type = "boolean"
description = "Automatically fix warnings"
[[subcommand.options]]
name = "allow-dirty"
type = "boolean"
description = "Allow fixing when working directory is dirty"

[[subcommand]]
name = "fmt" 
description = """Format code using rustfmt.

**IMPORTANT:** This tool operates asynchronously.
1. **Immediate Response:** Returns operation_id and status 'started'. NOT success.
2. **Final Result:** Result pushed automatically via MCP notification when complete.

**Your Instructions:**
- **DO NOT** wait for the final result.
- **DO** continue with other tasks that don't depend on this operation.
- You **MUST** process the future result notification to know if operation succeeded."""

[[subcommand.options]]
name = "check"
type = "boolean"
description = "Check if files are formatted without changing them"

[[subcommand]]
name = "run"
description = "Run the project"
[[subcommand.options]]
name = "release"
type = "boolean"
description = "Run with optimizations"
[[subcommand.options]]
name = "bin"
type = "string"
description = "Name of the binary to run"

[[subcommand]]
name = "doc"
description = "Generate documentation"
[[subcommand.options]]
name = "no-deps"
type = "boolean"
description = "Don't build documentation for dependencies"
[[subcommand.options]]
name = "open"
type = "boolean"
description = "Open documentation in browser"

[[subcommand]]
name = "clean"
description = "Remove build artifacts"

[[subcommand]]
name = "add"
description = "Add a dependency to Cargo.toml (requires cargo-edit)"
[[subcommand.options]]
name = "package"
type = "string"
description = "Package name (and optional version) to add, e.g. serde@1.0"

[[subcommand]]
name = "remove"
description = "Remove a dependency from Cargo.toml (requires cargo-edit)"
[[subcommand.options]]
name = "package"
type = "string"
description = "Package name to remove"

[[subcommand]]
name = "update"
description = "Update dependencies in Cargo.lock to latest compatible versions"
[[subcommand.options]]
name = "package"
type = "string"
description = "Optional specific package to update"

[[subcommand]]
name = "fetch"
description = "Download dependencies without building"

[[subcommand]]
name = "install"
description = "Install a Rust binary via cargo"
[[subcommand.options]]
name = "package"
type = "string"
description = "Package/binary to install"

[[subcommand]]
name = "search"
description = "Search for packages on crates.io"
[[subcommand.options]]
name = "query"
type = "string"
description = "Search query"

[[subcommand]]
name = "tree"
description = "Display dependency tree - returns immediately."
synchronous = true

[[subcommand]]
name = "version"
description = "Show cargo version information - returns immediately."
synchronous = true

[[subcommand]]
name = "metadata"
description = "Output package metadata as JSON - returns immediately."
synchronous = true

[[subcommand]]
name = "nextest"
description = "Run tests with cargo-nextest (if installed)"
[[subcommand.options]]
name = "workspace"
type = "boolean"
description = "Run tests for all packages in workspace"

[[subcommand]]
name = "audit"
description = "Run security vulnerability scanning (if cargo-audit installed)"

[[subcommand]]
name = "upgrade"
description = "Upgrade dependency versions in Cargo.toml (requires cargo-edit)"
[[subcommand.options]]
name = "yes"
type = "boolean"
description = "Automatically apply upgrades"

[[subcommand]]
name = "bump_version"
description = "Bump package version (requires cargo-edit or custom script)"
[[subcommand.options]]
name = "bump_type"
type = "string"
description = "patch, minor, or major"
[[subcommand.options]]
name = "dry_run"
type = "boolean"
description = "Show changes without modifying files"

[[subcommand]]
name = "bench"
description = """Run benchmarks.

**IMPORTANT:** This tool operates asynchronously.
1. **Immediate Response:** Returns operation_id and status 'started'. NOT success.
2. **Final Result:** Result pushed automatically via MCP notification when complete.

**Your Instructions:**
- **DO NOT** wait for the final result.
- **DO** continue with other tasks that don't depend on this operation.
- You **MUST** process the future result notification to know if operation succeeded."""

# Wait tool - strongly discouraged
[[subcommand]]
name = "wait"
description = """Wait for previously started asynchronous operations to complete.

**WARNING:** This is a blocking tool and makes you inefficient.
- **ONLY** use this if you have NO other tasks and cannot proceed until completion.
- It is **ALWAYS** better to perform other work and let results be pushed to you.
- Use this ONLY for final project validation when all work is complete."""
synchronous = true
[[subcommand.options]]
name = "operation_ids"
type = "array"
description = "Specific operation IDs to wait for (optional - waits for all if not specified)"
