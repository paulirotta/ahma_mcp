# Sed Tool Configuration for Ahma MCP
# This configuration adapts the `sed` stream editor command for AI assistant use  
# When ahma_mcp starts, it will automatically discover sed's capabilities
# by parsing `sed --help` output and update this file with discovered commands

tool_name = "sed"
command = "sed"
enabled = true
timeout_seconds = 60
verbose = false

# AI guidance hints - customize these to improve AI interactions
[hints]
# Primary hint shown when AI considers using sed
primary = "Sed is a stream editor for filtering and transforming text. Use it for find/replace operations, line deletion, text insertion, and other text processing tasks."

# Usage examples for common operations
usage = """
Common sed patterns:
- sed 's/old/new/g' file.txt - Replace all 'old' with 'new' in file
- sed 's/old/new/' file.txt - Replace first 'old' with 'new' per line
- sed -i 's/old/new/g' file.txt - Edit file in-place (backup with -i.bak)
- sed -n '5,10p' file.txt - Print lines 5 through 10
- sed '5d' file.txt - Delete line 5
- sed '/pattern/d' file.txt - Delete lines matching pattern
- sed '1i\\Header text' file.txt - Insert text before line 1
- sed '$a\\Footer text' file.txt - Append text after last line
"""

# What the AI should think about during operations
wait_hint = "While sed processes text, consider: verifying the pattern matches expected text, planning additional transformations, or validating output format."

# Parameter-specific hints for better AI understanding
[hints.parameters]
in_place = "Edit files in-place with -i flag. Use -i.backup to create backup files"
quiet = "Suppress automatic printing with -n flag (useful with explicit p commands)"
expression = "Provide sed script as -e 'script' for complex operations"
file = "Read sed commands from file with -f script_file"

# Override configurations for specific operations
# Uncomment and customize as needed:

# [overrides.substitute]
# hints.primary = "Perform find and replace operations on text"
# hints.usage = "Use s/pattern/replacement/flags where flags can be g(global), i(ignore case), etc."
# hints.parameters.global = "Use 'g' flag to replace all occurrences on each line, not just the first"

# Example of pattern-specific guidance:
# [overrides.delete]  
# hints.primary = "Remove lines from text based on patterns or line numbers"
# hints.usage = "Use line numbers (5d), ranges (5,10d), or patterns (/text/d) to specify what to delete"
# hints.wait_hint = "After deletion, verify the correct lines were removed and file structure remains intact"

# Complex script examples:
# [hints.examples]
# multi_line = "For multi-line operations: sed -e 'command1' -e 'command2' file.txt"
# regex_tips = "Use extended regex with -E flag. Escape special chars: \\. \\* \\[ \\] \\^ \\$"
# backup_safety = "Always backup important files: sed -i.backup 's/old/new/g' file.txt"
